name: PyQBDI Linux package

on:
  push:
    branches:
      - main
      - dev-next

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        QBDI_ARCH: ['X86_64', 'X86']
    env:
      QBDI_PLATFORM: 'linux'
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Cache ccache
        uses: actions/cache@v2
        id: cache-ccache
        with:
          path: |
            ~/.ccache
          key: ccache-pyqbdi-linux-${{ matrix.QBDI_ARCH }}-${{ hashFiles('.github/workflows/ccache.conf') }}
      - if: steps.cache-ccache.outputs.cache-hit != 'true'
        run: |
          mkdir ~/.ccache
          cp .github/workflows/ccache.conf ~/.ccache/ccache.conf
      - name: Cache llvm
        uses: actions/cache@v2
        id: cache-llvm
        with:
          path: |
            deps/llvm/linux-${{ matrix.QBDI_ARCH }}/include
            deps/llvm/linux-${{ matrix.QBDI_ARCH }}/lib
          key: llvm-${{ runner.os }}-pyqbdi-linux-${{ matrix.QBDI_ARCH }}-${{ hashFiles('deps/llvm/build.py') }}
      - name: Create build image
        env:
          QBDI_ARCH: ${{ matrix.QBDI_ARCH }}
        run: bash ./docker/ci_python_linux/img_build.sh
      - name: Build Wheel
        env:
          QBDI_ARCH: ${{ matrix.QBDI_ARCH }}
        run: bash ./docker/ci_python_linux/whl_build.sh
      - name: Export wheel
        uses: actions/upload-artifact@v2
        with:
          name: PyQBDI linux ${{ matrix.QBDI_ARCH }}
          path: outwheel/*



